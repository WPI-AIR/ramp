<launch>

<!-- LOAD PARAMETERS -->
<param name="use_sim_time" value="True"/>
<!-- Load the planner's config.yaml file and robot_0.yaml file -->
<include file="$(find ramp_launch)/launch/planner_parameters.launch" />

<!-- START NODES -->
<!-- Simulation and costmap should be started in separate file, e.g., gazebo_costmap.launch -->

<!-- Start publishing the map->odom transform -->
<node name="pub_map_equal_odom" pkg="ramp_planner" type="pub_map_odom" respawn="true" />

<!-- Trajectory Generator -->
<node name="trajectory_generator" pkg="trajectory_generator" type="trajectory_generator" output="log" respawn="true" />

<!-- Path Modification -->
<node name="path_modification" pkg="path_modification" type="path_modification" output="screen" respawn="true" />

<!-- Evaluation -->
<node name="trajectory_evaluation" pkg="trajectory_evaluation" type="trajectory_evaluation" output="screen" respawn="true" />

<!-- Sensing -->
<node name="ramp_sensing" pkg="ramp_sensing" type="ramp_sensing" output="screen" respawn="true" />

<!-- Reset odometry -->
<!-- This has been moved into ramp_planner -->
<!-- <node name="reset_odom" pkg="ramp_control" type="reset_odom.py" output="log" /> -->

<!-- Control node -->
<node name="ramp_control" pkg="ramp_control" type="ramp_control" output="screen" respawn="true" >
  <remap from="odometry" to="odom" />
  <remap from="cmd_vel" to="mobile_base/commands/velocity" />
  <param name="simulation" value="true" />
</node>

<!-- Planner -->
<node name="ramp_planner" pkg="ramp_planner" type="ramp_planner" output="screen" respawn="true" />

<node name="pub_tf_missing_turtlebot_gazebo"  pkg="ramp_sensing" type="pub_tf_missing_turtlebot_gazebo" />

<!-- Move obstacles -->
<!-- <node name="move_obstacles" pkg="ramp_planner" type="move_gazebo_obs" output="log" respawn="true" /> -->

</launch>
